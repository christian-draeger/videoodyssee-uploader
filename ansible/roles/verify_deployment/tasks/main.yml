---
- name: "wait for the application server to start"
  wait_for: host={{ inventory_hostname }} port=8080
  delegate_to: localhost

- action: uri url=http://{{ inventory_hostname }}:8080/status/check
  name: wait for the application to start
  delegate_to: localhost
  register: webpage
  until: webpage.status | default(0) == 200
  retries: 10
- assert:
    that:
    - "'{{ webpage.json.status }}' == 'UP'"

- when: git_commit_id is defined
  uri: url=http://{{ inventory_hostname }}:8080/status/check
  name: get the deployed version
  delegate_to: localhost
  register: webpage
- when: git_commit_id is defined
  name: verify that the correct version was deployed
  assert:
    that:
    - "'{{ webpage.json.buildId }}' == '{{ git_commit_id }}'"

- stat: path=/usr/share/{{ application_name }}/{{ application_name }}.jar
  register: file
- assert:
    that:
      - file.stat.mode  == "0500"

- command: sudo lsattr /usr/share/{{ application_name }}/{{ application_name }}.jar
  name: verify extended fs attributes; immutable jar
  register: extended_attributes
- assert:
    that:
      - extended_attributes.stdout.find('----i--------e--') != -1

- stat: path=/data/{{ application_name }}/application.properties
  name: verify config is read only
  register: config
- assert:
    that:
    - config.stat.mode == "0444"
